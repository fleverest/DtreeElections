// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppThread.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// RSocialChoiceIRV
Rcpp::List RSocialChoiceIRV(Rcpp::List bs, unsigned nWinners);
RcppExport SEXP _dirtree_elections_RSocialChoiceIRV(SEXP bsSEXP, SEXP nWinnersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type bs(bsSEXP);
    Rcpp::traits::input_parameter< unsigned >::type nWinners(nWinnersSEXP);
    rcpp_result_gen = Rcpp::wrap(RSocialChoiceIRV(bs, nWinners));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_pirv_dirichlet_tree_module();

static const R_CallMethodDef CallEntries[] = {
    {"_dirtree_elections_RSocialChoiceIRV", (DL_FUNC) &_dirtree_elections_RSocialChoiceIRV, 2},
    {"_rcpp_module_boot_pirv_dirichlet_tree_module", (DL_FUNC) &_rcpp_module_boot_pirv_dirichlet_tree_module, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_dirtree_elections(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
